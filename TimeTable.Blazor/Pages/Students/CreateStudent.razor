@page "/Students/Create"
@inject IStudentService StudentService;
@inject INotifyService NotifyService;
@inject NavigationManager NavigationManager;

<PageTitle>Create Subject</PageTitle>

<RadzenCard class="w-50 m-auto">
    <h3>Create Student</h3>

    <RadzenTemplateForm TItem="StudentDto" Data="@Model" Submit=@OnSubmit InvalidSubmit=@OnInvalidSubmit>
        <div class="row">
            <div class="col-12 mb-2">
                <RadzenText Text="Student Code" />
            </div>
            <div class="col-12 mb-2">
                <RadzenTextBox @bind-Value=@Model.Code Name="Code" MaxLength="20" class="w-100" />
                <RadzenRequiredValidator Component="Code" Text="Student Code is required" />
            </div>

            <div class="col-12 mb-2">
                <RadzenText Text="First Name" />
            </div>
            <div class="col-12 mb-2">
                <RadzenTextBox @bind-Value=@Model.FirstName Name="FirstName" class="w-100" />
                <RadzenRequiredValidator Component="FirstName" Text="First Name is required" />
            </div>


            <div class="col-12 mb-2">
                <RadzenText Text="Last Name" />
            </div>
            <div class="col-12 mb-2">
                <RadzenTextBox @bind-Value=@Model.LastName Name="FirstName" class="w-100" />
            </div>

            <div class="col-12 mb-2">
                <RadzenText Text="Email" />
            </div>
            <div class="col-12 mb-2">
                <RadzenTextBox @bind-Value=@Model.Email Name="Email" class="w-100" />
                <RadzenEmailValidator Component="Email" Text="Email format is incorrect" />
            </div>

            <div class="col-12">
                <RadzenButton ButtonType="ButtonType.Submit" Text="Save" />
            </div>
        </div>

    </RadzenTemplateForm>
</RadzenCard>

@code {

    private StudentDto Model { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        Model = new StudentDto();
    }

    void OnSubmit(StudentDto model)
    {
        var success = StudentService.CreateStudent(model);
        if (success)
        {
            NotifyService.Success("Added Student Success.");
            NavigationManager.NavigateTo("/Students");
        }
        else
        {
            NotifyService.Error("Add Student Error.");
        }
    }

    void OnInvalidSubmit(FormInvalidSubmitEventArgs args)
    {
    }
}
